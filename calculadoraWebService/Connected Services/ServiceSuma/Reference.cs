//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace calculadoraWebService.ServiceSuma {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSuma.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/suma", ReplyAction="*")]
        int suma(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/suma", ReplyAction="*")]
        System.Threading.Tasks.Task<int> sumaAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/resta", ReplyAction="*")]
        int resta(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/resta", ReplyAction="*")]
        System.Threading.Tasks.Task<int> restaAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/multiplicacion", ReplyAction="*")]
        int multiplicacion(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/multiplicacion", ReplyAction="*")]
        System.Threading.Tasks.Task<int> multiplicacionAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/division", ReplyAction="*")]
        int division(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/division", ReplyAction="*")]
        System.Threading.Tasks.Task<int> divisionAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : calculadoraWebService.ServiceSuma.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<calculadoraWebService.ServiceSuma.WebService1Soap>, calculadoraWebService.ServiceSuma.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int suma(int num1, int num2) {
            return base.Channel.suma(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> sumaAsync(int num1, int num2) {
            return base.Channel.sumaAsync(num1, num2);
        }
        
        public int resta(int num1, int num2) {
            return base.Channel.resta(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> restaAsync(int num1, int num2) {
            return base.Channel.restaAsync(num1, num2);
        }
        
        public int multiplicacion(int num1, int num2) {
            return base.Channel.multiplicacion(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> multiplicacionAsync(int num1, int num2) {
            return base.Channel.multiplicacionAsync(num1, num2);
        }
        
        public int division(int num1, int num2) {
            return base.Channel.division(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> divisionAsync(int num1, int num2) {
            return base.Channel.divisionAsync(num1, num2);
        }
    }
}
